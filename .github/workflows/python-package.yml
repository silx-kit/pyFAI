# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install meson-python ninja build wheel
        python -m pip install flake8
        if [ -f ci/requirements_gh.txt ]; then pip install -r ci/requirements_gh.txt; fi
        if [ -f ci/install_pyopencl.sh ]; then bash ci/install_pyopencl.sh ; fi
        #if [ -f ci/intel_opencl_icd.sh ]; then source ci/intel_opencl_icd.sh ; fi
    - name: Build package
      run: |
        python -m build
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=sandbox,third_party,plugins,doc,build
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=sandbox,third_party,plugins,doc,build
    - name: Run tests
      run: |
        export OCL_ICD_VENDORS=$(pwd)/intel_opencl_icd/vendors
        env |grep ICD
        python3 -c "import pyopencl; print(pyopencl.get_platforms())"
        python3 -c "import silx.opencl; print(silx.opencl.ocl)"
        python run_tests.py

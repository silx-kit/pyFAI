# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
# https://ci.appveyor.com/project/ESRF/pyFAI

version: 0.13.{build}
shallow_clone: true
build: false

notifications:
- provider: Email
  to:
  - silx-ci@edna-site.org
  subject: '[CI] appveyor'
  on_build_success: false
  on_build_failure: false
  on_build_status_changed: true

os:
    - Visual Studio 2015

cache:
    - '%LOCALAPPDATA%\pip\Cache'

environment:
    global:
        WIN_SDK_ROOT: "C:\\Program Files\\Microsoft SDKs\\Windows"
        VENV_BUILD_DIR: "venv_build"
        VENV_TEST_DIR: "venv_test"
        SETUPTOOLS_VERSION: ""

    matrix:
        # Python 3.5
        - PYTHON_DIR: "C:\\Python35-x64"
          PYTHON_VERSION: "3.5.0"
          PYTHON_ARCH: "64"
          BUILD_ARGS: ""
          # Specific problem on pyfai appveyor python 3.5. Need investigation.
          SETUPTOOLS_VERSION: "==18.2"

install:
    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools%SETUPTOOLS_VERSION%"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_BUILD_DIR%"
    - "%VENV_BUILD_DIR%\\Scripts\\activate.bat"
    - "set"

    # Configure environment
    - ps: >-
        If ($env:PYTHON_VERSION -Like "3.4.*") {
          & "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
        } ElseIf ($env:PYTHON_VERSION -Like "3.5.*") {
          # Workaround to fix linking errors inside a virtualenv
          # Still need to investigate. Silx with the same env do not have this kind of problems
          # This setuptools version must be ignored
          pip install --upgrade setuptools!=24.0.*,!=24.1.*,!=24.2.*
        }

    # Install build dependencies
    - "pip install --upgrade wheel"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ numpy cython --upgrade"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ pyparsing scipy --upgrade"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ -r ci/requirements_appveyor.txt --upgrade"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    # Build
    - "del pyFAI\\ext\\histogram.c"
    # OpenMP is not available on python 3.4
    - "python setup.py build %BUILD_ARGS%"
    - "python setup.py test"
    - "python setup.py bdist_wheel bdist_msi"
    - ps: "ls dist"
    # Install the generated wheel package to test it
    - "pip install --pre --no-index --find-links dist/ pyFAI"

  # Leave build virtualenv
    - "%VENV_BUILD_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_BUILD_DIR% /s /q"

test_script:
    # Create test virtualenv
    - "virtualenv --clear %VENV_TEST_DIR%"
    - "%VENV_TEST_DIR%\\Scripts\\activate.bat"

    # Upgrade distribution modules
    - "python -m pip install --upgrade pip"
    - "pip install --upgrade setuptools wheel"
    # Install build dependencies
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ -r ci/requirements_appveyor.txt --upgrade"
    # Install the generated wheel package to test it
    - "pip install --pre --find-links dist/ pyFAI"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"
    - "python run_tests.py"

    # Leave test virtualenv
    - "%VENV_TEST_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_TEST_DIR% /s /q"

artifacts:
    # Archive the generated wheel package in the ci.appveyor.com build report.
    - path: dist\*
